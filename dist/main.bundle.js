(()=>{"use strict";var e,t,n,r,o,a,c,i={65:(e,t,n)=>{function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(e,t){if(e){if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}function d(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a=[],c=!0,i=!1;try{for(n=n.call(e);!(c=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);c=!0);}catch(e){i=!0,o=e}finally{try{c||null==n.return||n.return()}finally{if(i)throw o}}return a}}(e,t)||i(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function u(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||i(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n(140);var l=function(){function e(){r(this,e)}return a(e,null,[{key:"getElement",value:function(e,t,n,r){var o,a=null;try{a=document.createElement(e)}catch(e){throw new Error("Unable to create HTMLElement! Give a proper tag name")}t&&(o=a.classList).add.apply(o,u(t.split(" "))),n&&Array.isArray(n)?n.forEach((function(e){return e&&a.appendChild(e)})):n&&"object"===s(n)?a.appendChild(n):n&&"string"==typeof n&&(a.innerHTML=n),r&&r.appendChild(a);for(var c=arguments.length,i=new Array(c>4?c-4:0),l=4;l<c;l++)i[l-4]=arguments[l];return i.length&&i.forEach((function(e){var t=d(e,2),n=t[0],r=t[1];""===r&&a.setAttribute(n,""),n.match(/value|id|placeholder|cols|rows|autocorrect|spellcheck/)?a.setAttribute(n,r):a.dataset[n]=r})),a}}]),e}();const p=[[{code:"Backquote",en:"`",ru:"ё",capsLockEn:"`",capsLockRu:"Ё",eventShiftRu:"Ё",eventShiftEn:"~",typeEnd:!1,keyCode:192},{code:"Digit1",en:"1",ru:"1",capsLockEn:"1",capsLockRu:"1",eventShiftRu:"!",eventShiftEn:"!",typeEnd:!1,keyCode:49},{code:"Digit2",en:"2",ru:"2",capsLockEn:"2",capsLockRu:"2",eventShiftRu:'"',eventShiftEn:"@",typeEnd:!1,keyCode:50},{code:"Digit3",en:"3",ru:"3",capsLockEn:"3",capsLockRu:"3",eventShiftRu:"№",eventShiftEn:"#",typeEnd:!1,keyCode:51},{code:"Digit4",en:"4",ru:"4",capsLockEn:"4",capsLockRu:"4",eventShiftRu:";",eventShiftEn:"$",typeEnd:!1,keyCode:52},{code:"Digit5",en:"5",ru:"5",capsLockEn:"5",capsLockRu:"5",eventShiftRu:"%",eventShiftEn:"%",typeEnd:!1,keyCode:53},{code:"Digit6",en:"6",ru:"6",capsLockEn:"6",capsLockRu:"6",eventShiftRu:":",eventShiftEn:"^",typeEnd:!1,keyCode:54},{code:"Digit7",en:"7",ru:"7",capsLockEn:"7",capsLockRu:"7",eventShiftRu:"?",eventShiftEn:"&",typeEnd:!1,keyCode:55},{code:"Digit8",en:"8",ru:"8",capsLockEn:"8",capsLockRu:"8",eventShiftRu:"*",eventShiftEn:"*",typeEnd:!1,keyCode:56},{code:"Digit9",en:"9",ru:"9",capsLockEn:"9",capsLockRu:"9",eventShiftRu:"(",eventShiftEn:"(",typeEnd:!1,keyCode:57},{code:"Digit0",en:"0",ru:"0",capsLockEn:"0",capsLockRu:"0",eventShiftRu:")",eventShiftEn:")",typeEnd:!1,keyCode:48},{code:"Minus",en:"-",ru:"-",capsLockEn:"-",capsLockRu:"-",eventShiftRu:"_",eventShiftEn:"_",typeEnd:!1,keyCode:189},{code:"Equal",en:"=",ru:"=",capsLockEn:"=",capsLockRu:"=",eventShiftRu:"+",eventShiftEn:"+",typeEnd:!1,keyCode:187},{code:"Backspace",en:"Backspace",ru:"Backspace",capsLockEn:"Backspace",capsLockRu:"Backspace",eventShiftRu:"Backspace",eventShiftEn:"Backspace",typeEnd:!0,keyCode:8,class:"backspase",hot:!0}],[{code:"Tab",en:"Tab",ru:"Tab",capsLockEn:"Tab",capsLockRu:"Tab",eventShiftRu:"Tab",eventShiftEn:"Tab",typeEnd:!1,keyCode:9,class:"tab",hot:!0},{code:"KeyQ",en:"q",ru:"й",capsLockEn:"Q",capsLockRu:"Й",eventShiftRu:"Й",eventShiftEn:"Q",typeEnd:!1,keyCode:81},{code:"KeyW",en:"w",ru:"ц",capsLockEn:"W",capsLockRu:"Ц",eventShiftRu:"Ц",eventShiftEn:"W",typeEnd:!1,keyCode:87},{code:"KeyE",en:"e",ru:"у",capsLockEn:"E",capsLockRu:"У",eventShiftRu:"У",eventShiftEn:"E",typeEnd:!1,keyCode:69},{code:"KeyR",en:"r",ru:"к",capsLockEn:"R",capsLockRu:"К",eventShiftRu:"К",eventShiftEn:"R",typeEnd:!1,keyCode:82},{code:"KeyT",en:"t",ru:"е",capsLockEn:"T",capsLockRu:"Е",eventShiftRu:"Е",eventShiftEn:"T",typeEnd:!1,keyCode:84},{code:"KeyY",en:"y",ru:"н",capsLockEn:"Y",capsLockRu:"Н",eventShiftRu:"Н",eventShiftEn:"Y",typeEnd:!1,keyCode:89},{code:"KeyU",en:"u",ru:"г",capsLockEn:"U",capsLockRu:"Г",eventShiftRu:"Г",eventShiftEn:"U",typeEnd:!1,keyCode:85},{code:"KeyI",en:"i",ru:"ш",capsLockEn:"I",capsLockRu:"Ш",eventShiftRu:"Ш",eventShiftEn:"I",typeEnd:!1,keyCode:73},{code:"KeyO",en:"o",ru:"щ",capsLockEn:"O",capsLockRu:"Щ",eventShiftRu:"Щ",eventShiftEn:"O",typeEnd:!1,keyCode:79},{code:"KeyP",en:"p",ru:"з",capsLockEn:"P",capsLockRu:"З",eventShiftRu:"З",eventShiftEn:"P",typeEnd:!1,keyCode:80},{code:"BracketLeft",en:"[",ru:"х",capsLockEn:"[",capsLockRu:"Х",eventShiftRu:"Х",eventShiftEn:"[",typeEnd:!1,keyCode:219},{code:"BracketRight",en:"]",ru:"ъ",capsLockEn:"]",capsLockRu:"Ъ",eventShiftRu:"Ъ",eventShiftEn:"}",typeEnd:!1,keyCode:221},{code:"Delete",en:"Delete",ru:"Delete",capsLockEn:"Delete",capsLockRu:"Delete",eventShiftRu:"Delete",eventShiftEn:"Delete",typeEnd:!0,keyCode:46,hot:!0}],[{code:"CapsLock",en:"CapsLock",ru:"CapsLock",capsLockEn:"CapsLock",capsLockRu:"CapsLock",eventShiftRu:"CapsLock",eventShiftEn:"CapsLock",typeEnd:!1,keyCode:20,hot:!0,class:"caps"},{code:"KeyA",en:"a",ru:"ф",capsLockEn:"A",capsLockRu:"Ф",eventShiftRu:"Ф",eventShiftEn:"A",typeEnd:!1,keyCode:65},{code:"KeyS",en:"s",ru:"ы",capsLockEn:"S",capsLockRu:"Ы",eventShiftRu:"Ы",eventShiftEn:"S",typeEnd:!1,keyCode:83},{code:"KeyD",en:"d",ru:"в",capsLockEn:"D",capsLockRu:"В",eventShiftRu:"В",eventShiftEn:"D",typeEnd:!1,keyCode:68},{code:"KeyF",en:"f",ru:"а",capsLockEn:"F",capsLockRu:"А",eventShiftRu:"А",eventShiftEn:"F",typeEnd:!1,keyCode:70},{code:"KeyG",en:"g",ru:"п",capsLockEn:"G",capsLockRu:"П",eventShiftRu:"П",eventShiftEn:"G",typeEnd:!1,keyCode:71},{code:"KeyH",en:"h",ru:"р",capsLockEn:"H",capsLockRu:"Р",eventShiftRu:"Р",eventShiftEn:"H",typeEnd:!1,keyCode:72},{code:"KeyJ",en:"j",ru:"о",capsLockEn:"J",capsLockRu:"О",eventShiftRu:"О",eventShiftEn:"J",typeEnd:!1,keyCode:74},{code:"KeyK",en:"k",ru:"л",capsLockEn:"K",capsLockRu:"Л",eventShiftRu:"Л",eventShiftEn:"K",typeEnd:!1,keyCode:75},{code:"KeyL",en:"l",ru:"д",capsLockEn:"L",capsLockRu:"Д",eventShiftRu:"Д",eventShiftEn:"L",typeEnd:!1,keyCode:76},{code:"Semicolon",en:";",ru:"ж",capsLockEn:";",capsLockRu:"Ж",eventShiftRu:"Ж",eventShiftEn:":",typeEnd:!1,keyCode:186},{code:"Quote",en:"'",ru:"э",capsLockEn:"'",capsLockRu:"Э",eventShiftRu:"Э",eventShiftEn:'"',typeEnd:!1,keyCode:222},{code:"Backslash",en:"\\",ru:"\\",capsLockEn:"\\",capsLockRu:"\\",eventShiftRu:"/",eventShiftEn:"|",typeEnd:!1,keyCode:220},{code:"Enter",en:"Enter",ru:"Enter",capsLockEn:"Enter",capsLockRu:"Enter",eventShiftRu:"Enter",eventShiftEn:"Enter",typeEnd:!1,keyCode:13,class:"enter",hot:!0}],[{code:"ShiftLeft",en:"Shift",ru:"Shift",capsLockEn:"Shift",capsLockRu:"Shift",eventShiftRu:"Shift",eventShiftEn:"Shift",typeEnd:!1,keyCode:16,class:"shift-left",hot:!0},{code:"KeyZ",en:"z",ru:"я",capsLockEn:"Z",capsLockRu:"Я",eventShiftRu:"Я",eventShiftEn:"Z",typeEnd:!1,keyCode:90},{code:"KeyX",en:"x",ru:"ч",capsLockEn:"X",capsLockRu:"Ч",eventShiftRu:"Ч",eventShiftEn:"X",typeEnd:!1,keyCode:88},{code:"KeyC",en:"c",ru:"с",capsLockEn:"C",capsLockRu:"С",eventShiftRu:"С",eventShiftEn:"C",typeEnd:!1,keyCode:67},{code:"KeyV",en:"v",ru:"м",capsLockEn:"V",capsLockRu:"М",eventShiftRu:"М",eventShiftEn:"V",typeEnd:!1,keyCode:86},{code:"KeyB",en:"b",ru:"и",capsLockEn:"B",capsLockRu:"И",eventShiftRu:"И",eventShiftEn:"B",typeEnd:!1,keyCode:66},{code:"KeyN",en:"n",ru:"т",capsLockEn:"N",capsLockRu:"Т",eventShiftRu:"Т",eventShiftEn:"N",typeEnd:!1,keyCode:78},{code:"KeyM",en:"m",ru:"ь",capsLockEn:"M",capsLockRu:"Ь",eventShiftRu:"Ь",eventShiftEn:"M",typeEnd:!1,keyCode:77},{code:"Comma",en:",",ru:"б",capsLockEn:",",capsLockRu:"Б",eventShiftRu:"Б",eventShiftEn:"<",typeEnd:!1,keyCode:188},{code:"Period",en:".",ru:"ю",capsLockEn:".",capsLockRu:"Ю",eventShiftRu:"Ю",eventShiftEn:">",typeEnd:!1,keyCode:190},{code:"Slash",en:"/",ru:".",capsLockEn:"/",capsLockRu:".",eventShiftRu:",",eventShiftEn:"?",typeEnd:!1,keyCode:191},{code:"ArrowUp",en:"&#10148;",ru:"&#10148;",capsLockEn:"&#10148;",capsLockRu:"&#10148",eventShiftRu:"&#10148;",eventShiftEn:"&#10148;",typeEnd:!0,keyCode:38,class:"arrow-up",hot:!0},{code:"ShiftRight",en:"Shift",ru:"Shift",capsLockEn:"Shift",capsLockRu:"Shift",eventShiftRu:"Shift",eventShiftEn:"Shift",typeEnd:!0,keyCode:16,class:"shift-right",hot:!0}],[{code:"ControlLeft",en:"Control",ru:"Control",capsLockEn:"Control",capsLockRu:"Control",eventShiftRu:"Control",eventShiftEn:"Control",typeEnd:!1,keyCode:17,class:"contrl-left",hot:!0},{code:"MetaLeft",en:"Win",ru:"Win",capsLockEn:"Win",capsLockRu:"Win",eventShiftRu:"Win",eventShiftEn:"Win",typeEnd:!1,keyCode:91,hot:!0},{code:"AltLeft",en:"Alt",ru:"Alt",capsLockEn:"Alt",capsLockRu:"Alt",eventShiftRu:"Alt",eventShiftEn:"Alt",typeEnd:!1,keyCode:18,class:"alt-left",hot:!0},{code:"Space",en:" ",ru:" ",capsLockEn:" ",capsLockRu:" ",eventShiftRu:" ",eventShiftEn:" ",typeEnd:!1,keyCode:32,class:"space"},{code:"AltRight",en:"Alt",ru:"Alt",capsLockEn:"Alt",capsLockRu:"Alt",eventShiftRu:"Alt",eventShiftEn:"Alt",typeEnd:!1,keyCode:18,hot:!0},{code:"ArrowLeft",en:"&#10148;",ru:"&#10148;",capsLockEn:"&#10148;",capsLockRu:"&#10148;",eventShiftRu:"&#10148;",eventShiftEn:"&#10148;",typeEnd:!1,keyCode:37,class:"arrow-left",hot:!0},{code:"ArrowDown",en:"&#10148;",ru:"&#10148;",capsLockEn:"&#10148;",capsLockRu:"&#10148;",eventShiftRu:"&#10148;",eventShiftEn:"&#10148;",typeEnd:!1,keyCode:40,class:"arrow-down",hot:!0},{code:"ArrowRight",en:"&#10148;",ru:"&#10148;",capsLockEn:"&#10148;",capsLockRu:"&#10148;",eventShiftRu:"&#10148;",eventShiftEn:"&#10148;",typeEnd:!1,keyCode:39,hot:!0},{code:"ControlRight",en:"Control",ru:"Control",capsLockEn:"Control",capsLockRu:"Control",eventShiftRu:"Control",eventShiftEn:"Control",typeEnd:!1,keyCode:17,class:"contrl-right",hot:!0}]];new(function(){function e(){r(this,e),this.root=document.querySelector("body"),this.container=document.createElement("div"),this.container.classList.add("container"),this.keyboardContainer=document.createElement("div"),this.textarea=document.createElement("textarea"),this.textarea.classList.add("textaria"),this.linux=document.createElement("p"),this.p=document.createElement("p"),this.linux.innerHTML="Клавиатура создана в операционной системе Linux",this.p.innerHTML="Для переключения языка комбинация: левыe ctrl + alt",this.keyboardContainer.classList.add("keyboard"),this.container.appendChild(this.textarea),this.container.appendChild(this.keyboardContainer),this.container.appendChild(this.linux),this.container.appendChild(this.p),this.root.appendChild(this.container),this.textarea.focus();var t=localStorage.getItem("lang");this.keyboardContainer.dataset.lang=t||"ru",this.init()}return a(e,[{key:"init",value:function(){this.createHtml(),this.clikhendler(),this.keyHendler()}},{key:"clikhendler",value:function(){var e=this;this.root.addEventListener("click",(function(t){var n=t.target,r=n.dataset,o=e.textarea.value;e.textarea.focus();var a=e.textarea.selectionEnd,c=e.textarea.selectionStart;if(!n.classList.contains("keyboard__key")||"true"===r.hot)return"Tab"===r.code?e.textarea.value="".concat(o,"\t"):"Backspace"===r.code?e.backspace(c,a,o):"Enter"===r.code?e.enter(c,a,o):"Delete"===r.code?e.delete(c,a,o):"ShiftLeft"===r.code||"ShiftRight"===r.code?e.shift():"CapsLock"===r.code?e.capsLock():"ArrowLeft"===r.code?e.arrowLeft(c):"ArrowRight"===r.code?e.arrowRight(c,o):void 0;if(c===o.length)return e.textarea.value=o+r[e.chekLang()];var i=o.split("");i.splice(c,0,r[e.chekLang()]);var d=i.join("");e.textarea.value=d,e.textarea.selectionStart=c+1,e.textarea.selectionEnd=c+1}))}},{key:"keyHendler",value:function(){var e=this,t=document.querySelectorAll(".keyboard__key"),n=new Set;window.addEventListener("keydown",(function(r){9===r.keyCode&&(r.preventDefault(),e.textarea.value="".concat(e.textarea.value,"\t"));for(var o=0;o<t.length;o++)if(t[o].dataset.code==r.code){t[o].classList.add("keyboard__key--active");break}if("ShiftLeft"!==r.code&&"ShiftRight"!==r.code||e.shift(),"CapsLock"===r.code&&e.capsLock(),"ControlLeft"===r.code||"AltLeft"===r.code){n.add(r.code);for(var a=0,c=["ControlLeft","AltLeft"];a<c.length;a++){var i=c[a];if(!n.has(i))return}n.clear();var d=e.keyboardContainer.dataset.lang;"capsLockEn"===d||"en"===d||"eventShiftEn"===d?(e.keyboardContainer.dataset.lang="ru",localStorage.setItem("lang","ru")):(localStorage.setItem("lang","en"),e.keyboardContainer.dataset.lang="en")}})),window.addEventListener("keyup",(function(t){if(n.delete(t.code),e.keyboardContainer.querySelectorAll(".keyboard__key--active").forEach((function(e){e.classList.remove("keyboard__key--active")})),"ShiftLeft"===t.code||"ShiftRight"===t.code)return e.shift()}))}},{key:"createHtml",value:function(){var e=this;p.forEach((function(t){var n=document.createElement("div");n.classList.add("keyboard__row"),t.forEach((function(e){var t=document.createElement("div");t.classList.add("capsLockEn"),t.innerHTML=e.capsLockEn;var r=document.createElement("div");r.classList.add("capsLockRu"),r.innerHTML=e.capsLockRu;var o=document.createElement("div");o.classList.add("eventShiftRu"),o.innerHTML=e.eventShiftRu;var a=document.createElement("div");a.classList.add("eventShiftEn"),a.innerHTML=e.eventShiftEn;var c=document.createElement("div");c.classList.add("en"),c.innerHTML=e.en;var i=document.createElement("div");i.classList.add("ru"),i.innerHTML=e.ru;var d=e.class?" ".concat(e.class):"";n.appendChild(l.getElement("div","".concat("keyboard__key").concat(d),[t,r,c,i,o,a],null,["code",e.code],["ru",e.ru],["en",e.en],["capsLockEn",e.capsLockEn],["capsLockRu",e.capsLockRu],["eventShiftRu",e.eventShiftRu],["eventShiftEn",e.eventShiftEn],["hot",e.hot]))})),e.keyboardContainer.appendChild(n)}))}},{key:"backspace",value:function(e,t,n){if(e===t){var r=n.split("");r[e-1]="";var o=r.join("");return this.textarea.value=o,this.textarea.selectionStart=e-1,void(this.textarea.selectionEnd=e-1)}this.textarea.value=n.replace(n.substring(e,t),""),this.textarea.selectionStart=e,this.textarea.selectionEnd=e}},{key:"enter",value:function(e,t,n){if(n.length===e)this.textarea.value="".concat(n,"\n"),this.textarea.selectionStart=e+1,this.textarea.selectionEnd=e+1;else if(e===t){var r=n.split("");r.splice(e,0,"\n");var o=r.join("");this.textarea.value=o,this.textarea.selectionStart=e+1,this.textarea.selectionEnd=e+1}else{var a=n.split(""),c=t-e;a.splice(e,c),a.splice(e,0,"\n");var i=a.join("");this.textarea.value=i,this.textarea.selectionStart=e+1,this.textarea.selectionEnd=e+1}}},{key:"delete",value:function(e,t,n){if(e!==n.length){if(e<n.length){var r=n.split("");r.splice(e,1);var o=r.join("");return this.textarea.value=o,this.textarea.selectionStart=e,void(this.textarea.selectionEnd=e)}var a=n.split(""),c=t-e;a.splice(e,c),a.splice(e,0,"");var i=a.join("");this.textarea.value=i,this.textarea.selectionStart=e,this.textarea.selectionEnd=e}}},{key:"arrowLeft",value:function(e){e&&(this.textarea.selectionStart=e-1,this.textarea.selectionEnd=e-1)}},{key:"arrowRight",value:function(e,t){e!==t.length&&(this.textarea.selectionStart=e+1,this.textarea.selectionEnd=e+1)}},{key:"shift",value:function(){return this.isCaps?"capsLockRu"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="eventShiftRu":"capsLockEn"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="eventShiftEn":"eventShiftRu"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="capsLockRu":"eventShiftEn"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="capsLockEn":void 0:"ru"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="eventShiftRu":"eventShiftRu"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="ru":"en"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="eventShiftEn":"eventShiftEn"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="en":void 0}},{key:"chekLang",value:function(){return this.keyboardContainer.dataset.lang}},{key:"capsLock",value:function(){return this.isCaps=!this.isCaps,"en"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="capsLockEn":"ru"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="capsLockRu":"capsLockRu"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="ru":"capsLockEn"==this.keyboardContainer.dataset.lang?this.keyboardContainer.dataset.lang="en":void 0}}]),e}())},783:(e,t,n)=>{var r=n(618),o=Object.create(null),a="undefined"==typeof document,c=Array.prototype.forEach;function i(){}function d(e,t){if(!t){if(!e.href)return;t=e.href.split("?")[0]}if(u(t)&&!1!==e.isLoaded&&t&&t.indexOf(".css")>-1){e.visited=!0;var n=e.cloneNode();n.isLoaded=!1,n.addEventListener("load",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.addEventListener("error",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.href="".concat(t,"?").concat(Date.now()),e.nextSibling?e.parentNode.insertBefore(n,e.nextSibling):e.parentNode.appendChild(n)}}function s(){var e=document.querySelectorAll("link");c.call(e,(function(e){!0!==e.visited&&d(e)}))}function u(e){return!!/^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(e)}e.exports=function(e,t){if(a)return console.log("no window.document found, will not HMR CSS"),i;var n,l,p=function(e){var t=o[e];if(!t){if(document.currentScript)t=document.currentScript.src;else{var n=document.getElementsByTagName("script"),a=n[n.length-1];a&&(t=a.src)}o[e]=t}return function(e){if(!t)return null;var n=t.split(/([^\\/]+)\.js$/),o=n&&n[1];return o&&e?e.split(",").map((function(e){var n=new RegExp("".concat(o,"\\.js$"),"g");return r(t.replace(n,"".concat(e.replace(/{fileName}/g,o),".css")))})):[t.replace(".js",".css")]}}(e);return n=function(){var e=p(t.filename),n=function(e){if(!e)return!1;var t=document.querySelectorAll("link"),n=!1;return c.call(t,(function(t){if(t.href){var o=function(e,t){var n;return e=r(e),t.some((function(r){e.indexOf(t)>-1&&(n=r)})),n}(t.href,e);u(o)&&!0!==t.visited&&o&&(d(t,o),n=!0)}})),n}(e);if(t.locals)return console.log("[HMR] Detected local css modules. Reload all css"),void s();n?console.log("[HMR] css reload %s",e.join(" ")):(console.log("[HMR] Reload all css"),s())},50,l=0,function(){var e=this,t=arguments,r=function(){return n.apply(e,t)};clearTimeout(l),l=setTimeout(r,50)}}},618:e=>{e.exports=function(e){if(e=e.trim(),/^data:/i.test(e))return e;var t=-1!==e.indexOf("//")?e.split("//")[0]+"//":"",n=e.replace(new RegExp(t,"i"),"").split("/"),r=n[0].toLowerCase().replace(/\.$/,"");return n[0]="",t+r+n.reduce((function(e,t){switch(t){case"..":e.pop();break;case".":break;default:e.push(t)}return e}),[]).join("/")}},140:(e,t,n)=>{var r=n(783)(e.id,{locals:!1});e.hot.dispose(r),e.hot.accept(void 0,r)}},d={};function s(e){var t=d[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var n=d[e]={id:e,exports:{}};try{var r={id:e,module:n,factory:i[e],require:s};s.i.forEach((function(e){e(r)})),n=r.module,r.factory.call(n.exports,n,n.exports,r.require)}catch(e){throw n.error=e,e}return n.exports}s.m=i,s.c=d,s.i=[],s.hu=e=>e+"."+s.h()+".hot-update.js",s.miniCssF=e=>{},s.hmrF=()=>"main."+s.h()+".hot-update.json",s.h=()=>"9b3e4991cfed0180cf64",s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="webpack:",s.l=(n,r,o,a)=>{if(e[n])e[n].push(r);else{var c,i;if(void 0!==o)for(var d=document.getElementsByTagName("script"),u=0;u<d.length;u++){var l=d[u];if(l.getAttribute("src")==n||l.getAttribute("data-webpack")==t+o){c=l;break}}c||(i=!0,(c=document.createElement("script")).charset="utf-8",c.timeout=120,s.nc&&c.setAttribute("nonce",s.nc),c.setAttribute("data-webpack",t+o),c.src=n),e[n]=[r];var p=(t,r)=>{c.onerror=c.onload=null,clearTimeout(f);var o=e[n];if(delete e[n],c.parentNode&&c.parentNode.removeChild(c),o&&o.forEach((e=>e(r))),t)return t(r)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:c}),12e4);c.onerror=p.bind(null,c.onerror),c.onload=p.bind(null,c.onload),i&&document.head.appendChild(c)}},(()=>{var e,t,n,r={},o=s.c,a=[],c=[],i="idle",d=0,u=[];function l(e){i=e;for(var t=[],n=0;n<c.length;n++)t[n]=c[n].call(null,e);return Promise.all(t)}function p(){0==--d&&l("ready").then((function(){if(0===d){var e=u;u=[];for(var t=0;t<e.length;t++)e[t]()}}))}function f(e){if("idle"!==i)throw new Error("check() is only allowed in idle status");return l("check").then(s.hmrM).then((function(n){return n?l("prepare").then((function(){var r=[];return t=[],Promise.all(Object.keys(s.hmrC).reduce((function(e,o){return s.hmrC[o](n.c,n.r,n.m,e,t,r),e}),[])).then((function(){return t=function(){return e?v(e):l("ready").then((function(){return r}))},0===d?t():new Promise((function(e){u.push((function(){e(t())}))}));var t}))})):l(y()?"ready":"idle").then((function(){return null}))}))}function h(e){return"ready"!==i?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+i+")")})):v(e)}function v(e){e=e||{},y();var r=t.map((function(t){return t(e)}));t=void 0;var o=r.map((function(e){return e.error})).filter(Boolean);if(o.length>0)return l("abort").then((function(){throw o[0]}));var a=l("dispose");r.forEach((function(e){e.dispose&&e.dispose()}));var c,i=l("apply"),d=function(e){c||(c=e)},s=[];return r.forEach((function(e){if(e.apply){var t=e.apply(d);if(t)for(var n=0;n<t.length;n++)s.push(t[n])}})),Promise.all([a,i]).then((function(){return c?l("fail").then((function(){throw c})):n?v(e).then((function(e){return s.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):l("idle").then((function(){return s}))}))}function y(){if(n)return t||(t=[]),Object.keys(s.hmrI).forEach((function(e){n.forEach((function(n){s.hmrI[e](n,t)}))})),n=void 0,!0}s.hmrD=r,s.i.push((function(u){var v,y,k,E,S=u.module,L=function(t,n){var r=o[n];if(!r)return t;var c=function(c){if(r.hot.active){if(o[c]){var i=o[c].parents;-1===i.indexOf(n)&&i.push(n)}else a=[n],e=c;-1===r.children.indexOf(c)&&r.children.push(c)}else console.warn("[HMR] unexpected require("+c+") from disposed module "+n),a=[];return t(c)},s=function(e){return{configurable:!0,enumerable:!0,get:function(){return t[e]},set:function(n){t[e]=n}}};for(var u in t)Object.prototype.hasOwnProperty.call(t,u)&&"e"!==u&&Object.defineProperty(c,u,s(u));return c.e=function(e){return function(e){switch(i){case"ready":l("prepare");case"prepare":return d++,e.then(p,p),e;default:return e}}(t.e(e))},c}(u.require,u.id);S.hot=(v=u.id,y=S,E={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:k=e!==v,_requireSelf:function(){a=y.parents.slice(),e=k?void 0:v,s(v)},active:!0,accept:function(e,t,n){if(void 0===e)E._selfAccepted=!0;else if("function"==typeof e)E._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)E._acceptedDependencies[e[r]]=t||function(){},E._acceptedErrorHandlers[e[r]]=n;else E._acceptedDependencies[e]=t||function(){},E._acceptedErrorHandlers[e]=n},decline:function(e){if(void 0===e)E._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)E._declinedDependencies[e[t]]=!0;else E._declinedDependencies[e]=!0},dispose:function(e){E._disposeHandlers.push(e)},addDisposeHandler:function(e){E._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=E._disposeHandlers.indexOf(e);t>=0&&E._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,i){case"idle":t=[],Object.keys(s.hmrI).forEach((function(e){s.hmrI[e](v,t)})),l("ready");break;case"ready":Object.keys(s.hmrI).forEach((function(e){s.hmrI[e](v,t)}));break;case"prepare":case"check":case"dispose":case"apply":(n=n||[]).push(v)}},check:f,apply:h,status:function(e){if(!e)return i;c.push(e)},addStatusHandler:function(e){c.push(e)},removeStatusHandler:function(e){var t=c.indexOf(e);t>=0&&c.splice(t,1)},data:r[v]},e=void 0,E),S.parents=a,S.children=[],a=[],u.require=L})),s.hmrC={},s.hmrI={}})(),(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var t=s.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),n=(e,t,n,r)=>{var o=document.createElement("link");return o.rel="stylesheet",o.type="text/css",o.onerror=o.onload=a=>{if(o.onerror=o.onload=null,"load"===a.type)n();else{var c=a&&("load"===a.type?"missing":a.type),i=a&&a.target&&a.target.href||t,d=new Error("Loading CSS chunk "+e+" failed.\n("+i+")");d.code="CSS_CHUNK_LOAD_FAILED",d.type=c,d.request=i,o.parentNode.removeChild(o),r(d)}},o.href=t,document.head.appendChild(o),o},r=(e,t)=>{for(var n=document.getElementsByTagName("link"),r=0;r<n.length;r++){var o=(c=n[r]).getAttribute("data-href")||c.getAttribute("href");if("stylesheet"===c.rel&&(o===e||o===t))return c}var a=document.getElementsByTagName("style");for(r=0;r<a.length;r++){var c;if((o=(c=a[r]).getAttribute("data-href"))===e||o===t)return c}},o=[],a=[],c=e=>({dispose:()=>{for(var e=0;e<o.length;e++){var t=o[e];t.parentNode&&t.parentNode.removeChild(t)}o.length=0},apply:()=>{for(var e=0;e<a.length;e++)a[e].rel="stylesheet";a.length=0}}),s.hmrC.miniCss=(e,t,i,d,u,l)=>{u.push(c),e.forEach((e=>{var t=s.miniCssF(e),c=s.p+t,i=r(t,c);i&&d.push(new Promise(((t,r)=>{var d=n(e,c,(()=>{d.as="style",d.rel="preload",t()}),r);o.push(i),a.push(d)})))}))},(()=>{var e,t,n,r,o,a=s.hmrS_jsonp=s.hmrS_jsonp||{179:0},c={};function i(t,n){return e=n,new Promise(((e,n)=>{c[t]=e;var r=s.p+s.hu(t),o=new Error;s.l(r,(e=>{if(c[t]){c[t]=void 0;var r=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;o.message="Loading hot update chunk "+t+" failed.\n("+r+": "+a+")",o.name="ChunkLoadError",o.type=r,o.request=a,n(o)}}))}))}function d(e){function c(e){for(var t=[e],n={},r=t.map((function(e){return{chain:[e],id:e}}));r.length>0;){var o=r.pop(),a=o.id,c=o.chain,d=s.c[a];if(d&&(!d.hot._selfAccepted||d.hot._selfInvalidated)){if(d.hot._selfDeclined)return{type:"self-declined",chain:c,moduleId:a};if(d.hot._main)return{type:"unaccepted",chain:c,moduleId:a};for(var u=0;u<d.parents.length;u++){var l=d.parents[u],p=s.c[l];if(p){if(p.hot._declinedDependencies[a])return{type:"declined",chain:c.concat([l]),moduleId:a,parentId:l};-1===t.indexOf(l)&&(p.hot._acceptedDependencies[a]?(n[l]||(n[l]=[]),i(n[l],[a])):(delete n[l],t.push(l),r.push({chain:c.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}s.f&&delete s.f.jsonpHmr,t=void 0;var d={},u=[],l={},p=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var f in n)if(s.o(n,f)){var h,v=n[f],y=!1,k=!1,E=!1,S="";switch((h=v?c(f):{type:"disposed",moduleId:f}).chain&&(S="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(y=new Error("Aborted because of self decline: "+h.moduleId+S));break;case"declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(y=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+S));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(h),e.ignoreUnaccepted||(y=new Error("Aborted because "+f+" is not accepted"+S));break;case"accepted":e.onAccepted&&e.onAccepted(h),k=!0;break;case"disposed":e.onDisposed&&e.onDisposed(h),E=!0;break;default:throw new Error("Unexception type "+h.type)}if(y)return{error:y};if(k)for(f in l[f]=v,i(u,h.outdatedModules),h.outdatedDependencies)s.o(h.outdatedDependencies,f)&&(d[f]||(d[f]=[]),i(d[f],h.outdatedDependencies[f]));E&&(i(u,[h.moduleId]),l[f]=p)}n=void 0;for(var L,m=[],R=0;R<u.length;R++){var g=u[R],C=s.c[g];C&&(C.hot._selfAccepted||C.hot._main)&&l[g]!==p&&!C.hot._selfInvalidated&&m.push({module:g,require:C.hot._requireSelf,errorHandler:C.hot._selfAccepted})}return{dispose:function(){var e;r.forEach((function(e){delete a[e]})),r=void 0;for(var t,n=u.slice();n.length>0;){var o=n.pop(),c=s.c[o];if(c){var i={},l=c.hot._disposeHandlers;for(R=0;R<l.length;R++)l[R].call(null,i);for(s.hmrD[o]=i,c.hot.active=!1,delete s.c[o],delete d[o],R=0;R<c.children.length;R++){var p=s.c[c.children[R]];p&&(e=p.parents.indexOf(o))>=0&&p.parents.splice(e,1)}}}for(var f in d)if(s.o(d,f)&&(c=s.c[f]))for(L=d[f],R=0;R<L.length;R++)t=L[R],(e=c.children.indexOf(t))>=0&&c.children.splice(e,1)},apply:function(t){for(var n in l)s.o(l,n)&&(s.m[n]=l[n]);for(var r=0;r<o.length;r++)o[r](s);for(var a in d)if(s.o(d,a)){var c=s.c[a];if(c){L=d[a];for(var i=[],p=[],f=[],h=0;h<L.length;h++){var v=L[h],y=c.hot._acceptedDependencies[v],k=c.hot._acceptedErrorHandlers[v];if(y){if(-1!==i.indexOf(y))continue;i.push(y),p.push(k),f.push(v)}}for(var E=0;E<i.length;E++)try{i[E].call(null,L)}catch(n){if("function"==typeof p[E])try{p[E](n,{moduleId:a,dependencyId:f[E]})}catch(r){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:f[E],error:r,originalError:n}),e.ignoreErrored||(t(r),t(n))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:a,dependencyId:f[E],error:n}),e.ignoreErrored||t(n)}}}for(var S=0;S<m.length;S++){var R=m[S],g=R.module;try{R.require(g)}catch(n){if("function"==typeof R.errorHandler)try{R.errorHandler(n,{moduleId:g,module:s.c[g]})}catch(r){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:g,error:r,originalError:n}),e.ignoreErrored||(t(r),t(n))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:g,error:n}),e.ignoreErrored||t(n)}}return u}}}self.webpackHotUpdatewebpack=(t,r,a)=>{for(var i in r)s.o(r,i)&&(n[i]=r[i],e&&e.push(i));a&&o.push(a),c[t]&&(c[t](),c[t]=void 0)},s.hmrI.jsonp=function(e,t){n||(n={},o=[],r=[],t.push(d)),s.o(n,e)||(n[e]=s.m[e])},s.hmrC.jsonp=function(e,c,u,l,p,f){p.push(d),t={},r=c,n=u.reduce((function(e,t){return e[t]=!1,e}),{}),o=[],e.forEach((function(e){s.o(a,e)&&void 0!==a[e]?(l.push(i(e,f)),t[e]=!0):t[e]=!1})),s.f&&(s.f.jsonpHmr=function(e,n){t&&s.o(t,e)&&!t[e]&&(n.push(i(e)),t[e]=!0)})},s.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(s.p+s.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),s(65)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,